name: Branch

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    needs: [node-dependencies]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Get the build args
        id: buildargs
        run: |
          echo "::set-output name=version::$(cat package.json | jq -er ".version")"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Build and push
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
#          platforms: linux/amd64,linux/arm64
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          cache-from: type=registry,ref=ghcr.io/settlemint/eth-net-intelligence-api:latest
          cache-to: type=inline
          tags: |
            ghcr.io/settlemint/eth-net-intelligence-api:latest
            ghcr.io/settlemint/eth-net-intelligence-api:${{steps.buildargs.outputs.version}}

      - name: Clean up old package versions
        if: github.ref == 'refs/heads/master'
        id: clean-up-old-package-versions
        uses: stripethree/gpr-janitor@dist
        with:
          keep-versions: 5
          min-age-days: 30
          packages-to-fetch: 100
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}            